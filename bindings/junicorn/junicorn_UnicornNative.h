/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class junicorn_UnicornNative */

#ifndef _Included_junicorn_UnicornNative
#define _Included_junicorn_UnicornNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_version
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_junicorn_UnicornNative_uc_1version
  (JNIEnv *, jclass);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_arch_supported
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_junicorn_UnicornNative_uc_1arch_1supported
  (JNIEnv *, jclass, jint);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_open
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_junicorn_UnicornNative_uc_1open
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_close
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_junicorn_UnicornNative_uc_1close
  (JNIEnv *, jclass, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_strerror
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_junicorn_UnicornNative_uc_1strerror
  (JNIEnv *, jclass, jint);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_errno
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_junicorn_UnicornNative_uc_1errno
  (JNIEnv *, jclass, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_reg_read
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_junicorn_UnicornNative_uc_1reg_1read__JI
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_reg_read
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_junicorn_UnicornNative_uc_1reg_1read__JII
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_reg_write
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_junicorn_UnicornNative_uc_1reg_1write
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_mem_read
 * Signature: (JJJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_junicorn_UnicornNative_uc_1mem_1read
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_mem_write
 * Signature: (JJ[BJ)V
 */
JNIEXPORT void JNICALL Java_junicorn_UnicornNative_uc_1mem_1write
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_emu_start
 * Signature: (JJJJJ)V
 */
JNIEXPORT void JNICALL Java_junicorn_UnicornNative_uc_1emu_1start
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_emu_stop
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_junicorn_UnicornNative_uc_1emu_1stop
  (JNIEnv *, jclass, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_hook_add
 * Signature: (JIIJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_junicorn_UnicornNative_uc_1hook_1add
  (JNIEnv *, jclass, jlong, jint, jint, jlong, jlong, jlong, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_hook_del
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_junicorn_UnicornNative_uc_1hook_1del
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_mem_map
 * Signature: (JJJI)V
 */
JNIEXPORT void JNICALL Java_junicorn_UnicornNative_uc_1mem_1map
  (JNIEnv *, jclass, jlong, jlong, jlong, jint);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_mem_map_ptr
 * Signature: (JJJIJ)V
 */
JNIEXPORT void JNICALL Java_junicorn_UnicornNative_uc_1mem_1map_1ptr
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_mem_unmap
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_junicorn_UnicornNative_uc_1mem_1unmap
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_mem_protect
 * Signature: (JJJI)V
 */
JNIEXPORT void JNICALL Java_junicorn_UnicornNative_uc_1mem_1protect
  (JNIEnv *, jclass, jlong, jlong, jlong, jint);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_query
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_junicorn_UnicornNative_uc_1query
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_context_alloc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_junicorn_UnicornNative_uc_1context_1alloc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_junicorn_UnicornNative_uc_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_context_save
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_junicorn_UnicornNative_uc_1context_1save
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_context_restore
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_junicorn_UnicornNative_uc_1context_1restore
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     junicorn_UnicornNative
 * Method:    uc_mem_regions
 * Signature: (J)[Ljunicorn/MemoryRegion;
 */
JNIEXPORT jobjectArray JNICALL Java_junicorn_UnicornNative_uc_1mem_1regions
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
